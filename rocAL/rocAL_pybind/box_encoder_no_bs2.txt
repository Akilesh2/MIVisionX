OK: OpenVX using GPU device - 0:  [gfx90a:sramecc+:xnack-] with 110 CUs on PCI bus c1:00.0
OK: loaded 90 kernels from libvx_rpp.so
OK: loaded 2 kernels from libvx_amd_media.so
[INF]  {rocalJpegCOCOFileSourceSingleShard}  Internal buffer size width = 640 height = 640 depth = 3
[INF]  {output_routine}  Output routine started with 10 to load
[INF]  {output_routine}  Output routine started with 10 to load
[INF]  {output_routine}  Output routine started with 10 to load
[INF]  {output_routine}  Output routine started with 10 to load
*********************************************************************
comes to gpu
Pipeline has been created succesfully
*********************** SHARD ID ************************ 0
*********************** NUM SHARDS ********************** 1
+++++++++++++++++++++++++++++EPOCH+++++++++++++++++++++++++++++++++++++ 0

 Self.encoded_bboxes :  tensor([0.0726, 0.0602, 0.1645, 0.1376, 0.3888, 0.0571, 0.6173, 0.2132])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.0726, 0.0602, 0.1645, 0.1376],
        [0.3888, 0.0571, 0.6173, 0.2132]])
************************************** i ************************************* 0

 Self.encoded_bboxes :  tensor([0.1588, 0.7042, 0.1907, 0.7322, 0.2128, 0.7028, 0.2270, 0.7212])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.1588, 0.7042, 0.1907, 0.7322],
        [0.2128, 0.7028, 0.2270, 0.7212]])
************************************** i ************************************* 1

 Self.encoded_bboxes :  tensor([0.5862, 0.0011, 0.9983, 0.6453, 0.4236, 0.3551, 0.6258, 0.7573])

 Self.encoded_labels :  tensor([21, 22], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.5862, 0.0011, 0.9983, 0.6453],
        [0.4236, 0.3551, 0.6258, 0.7573]])
************************************** i ************************************* 2

 Self.encoded_bboxes :  tensor([0.3298, 0.3142, 0.5188, 0.9771, 0.2315, 0.3359, 0.3417, 0.4729])

 Self.encoded_labels :  tensor([ 1, 39], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.3298, 0.3142, 0.5188, 0.9771],
        [0.2315, 0.3359, 0.3417, 0.4729]])
************************************** i ************************************* 3

 Self.encoded_bboxes :  tensor([0.5691, 0.2161, 0.7759, 0.4673, 0.3806, 0.1269, 0.7597, 0.8688])

 Self.encoded_labels :  tensor([18, 57], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.5691, 0.2161, 0.7759, 0.4673],
        [0.3806, 0.1269, 0.7597, 0.8688]])
************************************** i ************************************* 4
+++++++++++++++++++++++++++++EPOCH+++++++++++++++++++++++++++++++++++++ 1

 Self.encoded_bboxes :  tensor([0.8355, 0.0602, 0.9274, 0.1376, 0.3827, 0.0571, 0.6112, 0.2132])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.8355, 0.0602, 0.9274, 0.1376],
        [0.3827, 0.0571, 0.6112, 0.2132]])
************************************** i ************************************* 0

 Self.encoded_bboxes :  tensor([0.8093, 0.7042, 0.8412, 0.7322, 0.7730, 0.7028, 0.7872, 0.7212])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.8093, 0.7042, 0.8412, 0.7322],
        [0.7730, 0.7028, 0.7872, 0.7212]])
************************************** i ************************************* 1

 Self.encoded_bboxes :  tensor([0.5862, 0.0011, 0.9983, 0.6453, 0.4236, 0.3551, 0.6258, 0.7573])

 Self.encoded_labels :  tensor([21, 22], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.5862, 0.0011, 0.9983, 0.6453],
        [0.4236, 0.3551, 0.6258, 0.7573]])
************************************** i ************************************* 2

 Self.encoded_bboxes :  tensor([0.3298, 0.3142, 0.5188, 0.9771, 0.2315, 0.3359, 0.3417, 0.4729])

 Self.encoded_labels :  tensor([ 1, 39], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.3298, 0.3142, 0.5188, 0.9771],
        [0.2315, 0.3359, 0.3417, 0.4729]])
************************************** i ************************************* 3

 Self.encoded_bboxes :  tensor([0.2241, 0.2161, 0.4309, 0.4673, 0.2403, 0.1269, 0.6194, 0.8688])

 Self.encoded_labels :  tensor([18, 57], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.2241, 0.2161, 0.4309, 0.4673],
        [0.2403, 0.1269, 0.6194, 0.8688]])
************************************** i ************************************* 4
+++++++++++++++++++++++++++++EPOCH+++++++++++++++++++++++++++++++++++++ 2

 Self.encoded_bboxes :  tensor([0.0726, 0.0602, 0.1645, 0.1376, 0.3888, 0.0571, 0.6173, 0.2132])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.0726, 0.0602, 0.1645, 0.1376],
        [0.3888, 0.0571, 0.6173, 0.2132]])
************************************** i ************************************* 0

 Self.encoded_bboxes :  tensor([0.1588, 0.7042, 0.1907, 0.7322, 0.2128, 0.7028, 0.2270, 0.7212])

 Self.encoded_labels :  tensor([3, 3], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.1588, 0.7042, 0.1907, 0.7322],
        [0.2128, 0.7028, 0.2270, 0.7212]])
************************************** i ************************************* 1

 Self.encoded_bboxes :  tensor([0.5862, 0.0011, 0.9983, 0.6453, 0.4236, 0.3551, 0.6258, 0.7573])

 Self.encoded_labels :  tensor([21, 22], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.5862, 0.0011, 0.9983, 0.6453],
        [0.4236, 0.3551, 0.6258, 0.7573]])
************************************** i ************************************* 2

 Self.encoded_bboxes :  tensor([0.3298, 0.3142, 0.5188, 0.9771, 0.2315, 0.3359, 0.3417, 0.4729])

 Self.encoded_labels :  tensor([ 1, 39], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.3298, 0.3142, 0.5188, 0.9771],
        [0.2315, 0.3359, 0.3417, 0.4729]])
************************************** i ************************************* 3

 Self.encoded_bboxes :  tensor([0.5691, 0.2161, 0.7759, 0.4673, 0.3806, 0.1269, 0.7597, 0.8688])

 Self.encoded_labels :  tensor([18, 57], dtype=torch.int32)

 Self.encoded_boxes :  tensor([[0.5691, 0.2161, 0.7759, 0.4673],
        [0.3806, 0.1269, 0.7597, 0.8688]])
************************************** i ************************************* 4
*********************************************************************
